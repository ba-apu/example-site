pipeline {
    agent any
    environment {
        REGISTRY="docker-hub.land.gov.bd"
        dockerRegistryCredential='docker-hub.land.gov.bd'
        dockerImage = ''
        DOCKER_REGISTRY_URL="https://$REGISTRY"
        CONFIG_MAP="ba-systems-configmap"
	    SECRET_REF="ba-systems-secret"
        DEPLOYMENT_ENV="dev"
        IMAGE_CREATED_BY="jenkins"
        PROJECT_NAME="ba-systems-dev"
        NAMESPACE="dev-ba-systems"


        PROJECT_LOCATION="$JENKINS_DATA_LOCATION/workspace/$JOB_NAME"
        IMAGE_VERSION="$BUILD_NUMBER-$IMAGE_CREATED_BY-$GIT_TAG"
        DOCKER_TAG="$REGISTRY/$PROJECT_NAME:$IMAGE_VERSION"
        DEPLOYMENT_DIRECTORY="./deploy/$DEPLOYMENT_ENV"

        //k8s cluster specific configuration
        K8S_SERVICE_NAME="$PROJECT_NAME"
        K8S_CHANGE_CAUSE="$IMAGE_VERSION"

        DEPLOYMENT_TIMEOUT="120s"
        
        NODEPORT="30100"
		
	    }

    stages {

     
     stage('Building Docker image') { 
            steps { 
                script { 
                    dockerImage = docker.build("$DOCKER_TAG", "-f ./Dockerfile .")
                }
                sh '''
                docker images|grep $PROJECT_NAME
                '''
            } 
        }

      stage('Push docker image') {
            steps{
                script {
                    docker.withRegistry( "$DOCKER_REGISTRY_URL", dockerRegistryCredential ) {
                        dockerImage.push()
                        sh "docker images|grep $PROJECT_NAME"
                    }
                    
                }
            }
        }
     


     stage('Deleted image After upload to Registry') {
            steps {
                echo "Cleaning local docker registry $DOCKER_TAG image"
                sh 'docker rmi $DOCKER_TAG'
            }
        }

 
    stage('K8S Deployment') {
            steps {
                sh '''
                envsubst < $DEPLOYMENT_DIRECTORY/deploy.yaml | xargs -I{} echo {}
                envsubst < $DEPLOYMENT_DIRECTORY/deploy.yaml | kubectl apply -f -

                
                '''
            }
        }
    stage('Deploy service') {
            steps {
                sh '''
                envsubst < $DEPLOYMENT_DIRECTORY/service.yaml | xargs -I{} echo {}
                envsubst < $DEPLOYMENT_DIRECTORY/service.yaml | kubectl apply -f -
                '''
            }
        }



    }
}